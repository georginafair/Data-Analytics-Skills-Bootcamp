#creating list pm
pm = ['Winston Churchill', 'Margaret Thatcher', 'John Major', 'Tony Blair', 'David Cameron', 'Boris Johnson']

#questions indicated by Q*)

#Q1) Create a variable called members and assign the number of values in the list pm to it (i.e. the length)
members = len(pm)
members
#returned 6

#Q2) Create a variable called last_pm and assign the last prime minister from the list pm to it
last_pm = pm[-1]
last_pm
#returned 'Boris Johnson'

#You have been given the below code that will find the index position of the first space character (' ') in last_pm. This is then saved into the variable space_index
space_index = last_pm.index(' ')

#Q3) Create a variable called fn_last_pm and assign the first name of the last_pm to it
fn_last_pm = last_pm[:space_index]
fn_last_pm
#returned 'Boris'

#Below is a list containing information related to some movie ratings. Make sure you run the following code cell to create the list ratings before you attempt any of the following questions
ratings = [7, 4, 8, 2, 9, 4, 3, 6, 8, 6, 7, 9, 2, 0, 3, 4, 1, 0, 2, 5, 8, 2]

#Q4) Use .sort() method with reverse=True parameter to order the elements in ratings with the highest numbers coming first:
ratings.sort(reverse=True)
ratings
#returned [9, 9, 8, 8, 8, 7, 7, 6, 6, 5, 4, 4, 4, 3, 3, 2, 2, 2, 2, 1, 0, 0]

#Q5) Use .count() list method to calculate the number of entries that equal 0 in list ratings and assign this result to a variable called zero_ratings:
zero_ratings = ratings.count(0)
zero_ratings
#returned 2

#You have been given the below code that will convert the list ratings into a set(), and assign it to a variable called ratings_unique:
ratings_unique = set(ratings)

#Q6) Use the built-in function list() to convert ratings_unique into back into a list:
ratings_unique = list(ratings_unique)
type(ratings_unique)
#returned list

#Make sure you run the following code cell to create the dictionary info before attempting any of the following questions:info = {  'name': 'Boris Johnson',
          'country': 'United Kingdom',
          'partner': {'name': 'Carrie Symonds', 'relationship': 'Engaged'},
          'age': 58,
          'job': {'title': 'Prime Minister', 'years': 3}
        }
#You have been given the below code that extracts information under keys ['partner'] and ['name'] from info dictionary to output the name of the partner. Using this technique, answer the following question.
info['partner']['name']
#returned 'Carrie Symonds'

#Q7) Change the value for relationship key in partner to 'Married':
info['partner']['relationship'] = 'Married'
info
'''returned
{'name': 'Boris Johnson',
 'country': 'United Kingdom',
 'partner': {'name': 'Carrie Symonds', 'relationship': 'Married'},
 'age': 58,
 'job': {'title': 'Prime Minister', 'years': 3}}'''
